using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Content;
using Microsoft.Xna.Framework.Audio;
using Microsoft.Xna.Framework.GamerServices;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Media;
using CR4VE.GameBase.Camera;
using CR4VE.GameBase.Objects;
using CR4VE.GameBase.Objects.Terrain;
using CR4VE.GameLogic.Controls;
using CR4VE.GameLogic.AI;
using CR4VE.GameLogic.Characters;
using CR4VE.GameBase.HeadUpDisplay;

namespace CR4VE.GameLogic.GameStates
{
    class Singleplayer : GameStateInterface
    {
        #region Attribute
        public static ContentManager cont;
        GraphicsDeviceManager graphics;
        SpriteBatch spriteBatch;

        //Lighting Effects
        //public static Effect effect_directLight;
        public static Texture2D texture;

        //sky
        SkyBox skybox;

        //Terrain (Singleplayer)
        public static Tilemap[] gameMaps_hell= new Tilemap[] { };
        public static Tilemap[] gameMaps_crystal = new Tilemap[] { };
        public static bool isCrystal = false;
        //Terrain (Tutorial)
        public static Tilemap[] tutorialMaps = new Tilemap[] { };
        public static bool isTutorial = false;

        //TileMap parameters
        public static Tilemap[] currentMaps;
        public static int activeIndex1;
        public static int activeIndex2;

        public static List<Tile> visibles;

        public static Entity ArenaKey;
        public static Entity TutorialExit;
        public static Entity GoldSoundTrigger;

        //Player
        public static Character ghost;
        public static Character player;

        //reset point if dead
        public static Checkpoint lastCheckpoint;

        //HUD
        public static HUD hud;
        public static bool isPaused = false;

        //Textures
        public static bool isPopup;
        public static bool storyIsDisyplayed;
        private static Texture2D menu_pause;
        private static Texture2D[] tutSprites;
        private static Texture2D[] kazumiStorySprites;
        private static Texture2D[] opheliaStorySprites;
        public static int tutIndex;
        public static int kazumiStoryIndex;
        public static int opheliaStoryIndex;
        public static bool tutStop;
        public static Texture2D background;
        public static Texture2D background2;
        public static Texture2D background3;
        public static Texture2D background4;
        public static Texture2D background5;
        public static Texture2D background6;
        public static Texture2D background7;
        public static Texture2D background8;
        public static Texture2D background9;
        public static Texture2D background10;
        public static Texture2D background11;
        public static Texture2D background12;
        public static Texture2D background13;
        public static Texture2D background14;

        private bool soundPlayedGold = false;

        #endregion

        #region Konstruktor
        // im Konstruktor braucht nichts veraendert werden
        public Singleplayer() { }
        #endregion

        #region Init
        public void Initialize(ContentManager content)
        {
            //Zugriff auf Attribute der Game1 Klasse
            spriteBatch = CR4VE.Game1.spriteBatch;
            graphics = CR4VE.Game1.graphics;
            cont = content;

            //Sounds
            Sounds.menu.Stop();

            //needed parameters
            GameControls.initializeSingleplayer();

            isPaused = false;
            isPopup = false;
            tutIndex = -1;
            tutStop = false;
            storyIsDisyplayed = false;
            kazumiStoryIndex = 0;
            opheliaStoryIndex = 0;

            #region Terrain
            //Tutorial
            #region tutorialLayout1
            int[,] tutorialLayout1 = new int[,] {           
            
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,97, 0},
           { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1},
           { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
           { 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,93, 0, 0, 1, 1, 3, 1, 0, 0, 0, 0},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 3, 3, 1, 1, 1, 3,14,14, 3,14,14, 3, 3, 3, 3,14,14,14,14,14,14,14,14,14, 3, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 1, 1},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,14,14, 3,14,14, 3, 3, 3, 3,14,14,14,14,14,14,14,14,14, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,14,14, 3,14,14, 3, 3, 3, 3,14,14,14,14,14,14,14,14,14, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,14,14, 3,14,14, 3, 3, 3, 3,14,14,14,14,14,14,14,14,14, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3}};
            #endregion

            #region tutorialLayout2
            int[,] tutorialLayout2 = new int[,] {

           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0,13,13,13, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           { 0, 1, 0, 0,93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           { 1, 3, 1, 1, 1, 1,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,98, 0, 0, 0, 0, 0, 0, 0, 0,19, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           { 3, 3, 3, 3, 3, 3, 3,13,13, 0, 0,96, 0, 0, 0, 0, 0, 0,92, 0, 0,13, 0, 0, 0, 0, 0, 0,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3,13,13,13,13,13, 0, 0,13,13,13,13,13,13, 0, 0,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,18,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,13,13,15, 0, 0,92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,92, 0, 0, 0, 0, 0,19, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13},
           { 0, 0, 0, 3, 3, 3, 3, 3, 3,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,13,13,13,15,15,15,15, 0, 0,15,15, 0, 0, 0,15,15,15,15,15,15,15,15,15,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 3,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,13,13,13,13,18,18,18,16,16,18,18,16,16,16,18,18,18,18,18,18,18,18,18,18,15, 0, 0, 0,19, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 3,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,13,13,13,13,13,18,18,16,16,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,14,14,13,13,13,13,13,13,18,16,16,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16, 0, 0, 0,19, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,14,14,13,13,13,13,13,13,13,16,16,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16, 0, 0, 0, 0, 0, 0, 0, 0, 0,89,13,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,14,14,13,13,13,13,13,13,13,16,16,18,18,16,16,16,16,18,18,18,18,16,16,16,16,16,16,16,16,16,16, 0, 0, 0,15,15,15,15, 0,13,13,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,14,14,13,13,18,18,18,18,18,16,16,18,18,16,16,16,16,18,18,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,13,13,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,16,16,16, 16,16,16,16,16,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,16,16,16,16,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,16,16,16,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,13,13}};
            #endregion

            //Main Game
            #region Höllenlevel
            #region layout1
            int[,] layout1 = new int[,] {
        
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,98,93, 0, 0, 0},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,97, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 3, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0,93, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0,97, 0, 0, 0, 1, 0, 0, 3, 0, 0, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 3, 4, 4, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0},
            {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0},
            {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0},
            {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0}};
            #endregion  

            #region layout2
            int[,] layout2 = new int[,] { 

            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0,96, 0, 0, 0,97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 0, 0, 5, 0,93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,97, 0, 0},
            {3, 1, 0,93, 5, 5, 5, 0, 0, 5, 0, 0, 5, 0, 0, 5, 0, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 5, 0, 0, 5, 0, 0, 0, 5, 5, 0, 0},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 8, 8, 8, 8, 5, 5, 8, 8, 8, 8, 5, 9, 5, 0},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 9 ,9, 5},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 9, 9, 9},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 9, 9, 9},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 9, 9, 9},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 9, 9, 9},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 9, 9, 9},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 9, 9, 9},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 9, 9, 9},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 9, 9, 9},
            {3, 3, 3, 3, 3, 3, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 8, 8, 5, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 9, 9, 9}};
            #endregion

            #region layout3
            int[,] layout3 = new int[,] { 

            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0,98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {9, 9, 9, 9, 9, 9, 0, 0, 0,96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {9, 9, 9, 9, 9, 9, 0, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {9, 9, 9, 9, 9, 9,95, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 9, 0, 0, 9, 0, 0, 9, 0,93, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 9, 0, 0, 9, 0, 0, 9, 9, 9, 9, 9, 0, 0, 0, 9, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0},
            {9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 9, 0, 0, 9, 0, 0, 9, 9, 9, 9, 9, 0, 0, 0, 9, 0, 0, 0, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0},
            {9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,95,95, 9,95,95, 9,95,95, 9, 9, 9, 9, 9, 9, 0, 0, 9, 0, 0, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0,13,13, 0, 0,13, 0, 0},
            {9, 9, 9, 9, 9, 9, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 9, 0, 0, 9, 9, 9, 9, 9, 9, 9, 0, 0, 9,13,13,13,13,13,13,13,13},
            {9, 9, 9, 9, 9, 9, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,95,95, 9, 0, 0, 9, 9, 9, 9, 9, 9, 9, 0, 0, 9, 9, 9, 9, 9,13,13,13,13},
            {9, 9, 9, 9, 9, 9, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,95,95, 9, 9, 9, 9, 9, 9, 9,95,95, 9, 9, 9, 9, 9, 9,13,13,13},
            {9, 9, 9, 9, 9, 9, 0, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 9, 0, 0, 9, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,13,13},
            {9, 9, 9, 9, 9, 9, 0, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 9, 0, 0, 9, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9},
            {9, 9, 9, 9, 9, 9, 0, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 9, 0, 0, 9, 0, 0, 9, 9, 9, 9, 9, 9, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9}};
            #endregion

            #region layout4
            int[,] layout4 = new int[,] { 
            {0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
            {0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
           {13, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13},
           {13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13, 0,96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13, 0, 0,13, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,14,14, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13, 0,93, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0,13,13, 0, 0, 0, 0, 0, 0,13, 0, 0, 0,97, 0, 0, 0, 0, 0, 0},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13, 0, 0,13,13,13,13,13,13, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0,13,13, 0, 0, 0, 0, 0, 0},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,14,13,13,13,13, 0, 0, 0,93, 0, 0, 0, 0, 0, 0, 0, 0},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,14,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0,13,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0,13,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,13,13, 0, 0, 0,13, 0, 0, 0, 0, 0,13,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,14,14, 0, 0, 0, 0, 0, 0,13, 0, 0,13,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,14,14,14, 0, 0, 0,93,13,13, 0, 0, 0, 0, 0, 0,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,14,14,14,14, 0,98,13,13,13,13, 0, 0,97, 0, 0,13,13},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,13,13,13,13,13, 0, 0,13, 0, 0,13,14},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,14,14,14,14},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,14,14},
           {13,13,13,13,13,13,13,13,13,14,14,13,13,14,14,14,14,13,13,13,14,14,13,13,13,13,13,14,14,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,14}};
            #endregion

            #region layout5
            int[,] layout5 = new int[,] { 
          
           {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           { 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10,10,10, 0, 0, 0},
           {13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           {13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 0,10, 0, 0, 0, 0, 0, 0, 0, 0},
           {13,13,13, 0, 0, 0, 0, 0, 0, 0, 0,10, 0,97, 0,10, 0, 0, 0,10,10, 0, 0, 0,10, 0, 0, 0,10,10, 0, 0, 0, 0, 0, 0,10,10, 0, 0, 0, 0, 0, 0,10,10,10, 0, 0, 0, 0,10,98, 0, 0, 0},
           {13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 0, 0,10,10, 0, 0, 0, 0, 0, 0, 0,10,10,10,10, 0, 0, 0},
           {14,13,13,13,13, 0,10, 0, 0, 0,10, 0, 0, 0, 0, 0, 0,10, 0, 0, 0, 0, 0, 0, 0, 0,10,10, 0, 0, 0,10, 0, 0,10 ,0, 0,10, 0, 0, 0, 0, 0, 0, 0, 0,14,14,14,10,10,10,10,14,14,14},
           {14,14,13,14,14,14,10, 0, 0, 0,10,14,14,14,14,14,14,10,14,14,14,14,14,14,14,14,10,10,14,14,14,10,14,14,10,10 ,0,10,10,10,10, 0, 0,10, 0,14,14,14,14,10,10,10,10,14,14,14},
           {14,14,14,14,14,14,10, 0, 0,10,10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,10,10, 0, 0, 0, 0, 0, 0, 0,10,14,14,14,14,14,10,10,10,10,14,14,14},
           {14,14,14,14,14,14,10, 0, 0,10,10,10,10,10,10,10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,10,10, 0, 0,98,93, 0, 0,10,10,14,14,14,14,14,10,10,10,10,14,14,14},
           {14,14,14,14,14,14,14,10, 0, 0, 0, 0, 0, 0, 0, 0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,10,10,10,10,10,10,14,14,14,14,14,14,14,10,10,10,10,14,14,14},
           {14,14,14,14,14,14,14,10, 0,93,98, 0, 0, 0, 0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,10,10,10,10,14,14,14,14,14,14,14,10,10,10,10,14,14,14},
           {14,14,14,14,14,14,14,10,10,10,10, 0, 0,96, 0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,10,10,10,10,14,14,14,14,14,14,14,10,10,10,10,14,14,14},
           {14,14,14,14,14,14,14,14,14,14,10,10,10,10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,10,10,10,10,14,14,14,14,14,14,14,10,10,10,10,14,14,14},
           {14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,10,10,10,10,14,14,14}};
            #endregion

            #region layout6
            int[,] layout6 = new int[,] { 
   
           { 13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,19,19,19,19,19},
           { 13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,19,19,19,19,19},
           {  0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19,19,19,19,19},
           {  0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19,19,19,19,19},
           {  0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13, 0, 0,19,19,19,19,19},
           { 10, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12, 0, 0,13,13, 0, 0,19,19,19,19,19},
           { 10,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12, 0, 0, 0, 0, 0,13,13, 0,13,19,19,19,19,19},
           { 10,10,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,97, 0, 0,12, 0, 0, 0, 0, 0, 0, 0, 0,13,13, 0, 0,19,19,19,19,19},
           { 12,12,12,12, 0, 0,12,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13, 0, 0,19,19,19,19,19},
           { 12,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13, 0,19,19,19,19,19},
           { 12, 0, 0, 0, 0, 0, 0,93, 0,12,12,12,12, 0, 0, 0, 0,97, 0,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13, 0, 0,19,19,19,19,19},
           { 12, 0, 0,12,12,12,12,12,12,12,12,12,12,12, 0,12,12,12,12,12,12, 0, 0,12,12, 0, 0, 0, 0, 0,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13, 0, 0,19,19,19,19,19},
           { 12,12,12,12,12,12,12,12,12,12,12,12,12, 0, 0, 0, 0, 0, 0, 0,12,12,12,12,12,12, 0, 0,12,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13, 0,13,19,19,19,19,19},
           { 11,11,11,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12,12,12,12,12, 0, 0,12,12, 0, 0, 0, 0,95,95,95,95, 0, 0, 0, 0, 0, 0, 0,95,95,95, 0, 0, 0,13,13, 0, 0,19,19,19,19,19},
           { 11,11,11,11,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0,12,12,12,12,12,12,12,12, 0, 0,12,12,12, 0, 0,95,95,12,12,12,12,95,95,95,95,95,95,95,12,12,12,95,95,95,13,13, 0, 0,19,19,19,19,19},
           { 11,11,11,11,11,11, 0, 0,12, 0,96, 0, 0, 0, 0, 0,12,12,12,12,12,12,12,12, 0, 0, 0,12,12,12,95,95,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13, 0,19,19,19,19,19},
           { 11,11,11,11,11,11,11, 0, 0,12,12,12, 0, 0,98, 0, 0,12,12,12,12,12, 0, 0, 0, 0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13, 0, 0,19,19,19,19,19},
           { 11,11,11,11,11,11,11,11, 0, 0, 0, 0, 0, 0,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13, 0, 0,19,19,19,19, 0},
           { 11,11,11,11,11,11,11,11,11, 0,93, 0, 0,11,11,11, 0, 0, 0, 0, 0,93, 0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12, 0, 0,12,12,12,12,12,12,13,13, 0, 0, 0, 0, 0, 0, 0},
           { 12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11, 0, 0,12,12,12,12,12,12,12,12,12,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12,12,12,12,12,12,13,13, 0, 0, 0, 0, 0, 0, 0},
           { 12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12,12,12,12,12,12,13,13, 0, 0, 0, 0, 0, 0, 0},
           { 12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12,12,12,12,12,12,13,13, 0, 0, 0, 0, 0, 0, 0}};
            #endregion

            #region layout7
            int[,] layout7 = new int[,] { 
            {13,13, 0, 0,19,19,19,19,19,19,19,19,19,19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,13,13,13,13},
            {13,13, 0, 0,19,19,19,19,19,19,19,19,19,19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,13,13,13,13},
            {13,13, 0, 0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,13,13,13,13},
            {13,13, 0, 0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19, 0, 0, 0, 0, 0,13,13,13, 0, 0, 0, 0, 0, 0, 0,19,19,19,19,19,19,19,19},
            {13,13, 0, 0,19,19,19,19,19, 0, 0, 0, 0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19,19,19,19,19,19},
            {13,13, 0, 0,19,19,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19, 0, 0, 0,98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0, 0, 0,19,19,19,19},
            {13,13, 0, 0,19, 0, 0, 0, 0, 0,19,19, 0, 0, 0, 0, 0, 0, 0,19,19,19,19,19,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19, 0, 0,19, 0, 0, 0, 0, 0, 0, 0,19, 0, 0, 0, 0, 0, 0, 0, 0,19,19,19},
            {13,13, 0, 0, 0, 0, 0, 0, 0, 0,19, 0, 0,98,92, 0, 0, 0, 0, 0,19,19, 0, 0, 0, 0, 0, 0, 0, 0,92, 0, 0, 0,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,92, 0, 0, 0, 0, 0, 0},
            {13,13, 0, 0, 0, 0, 0, 0,19, 0,19,19,19,19,19,19,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,15,15,15,15,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19,19, 0, 0, 0,19, 0, 0,19,19, 0, 0, 0, 0, 0},
            {13,13,15,15,15, 0,96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,18,18,18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {13,13,18,18,18,15,15, 0, 0, 0, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,15,18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19,19, 0, 0},
            {13,13,18,18,18,18,18, 0, 0, 0, 0, 0,15, 0,15,15,15, 0, 0,15, 0, 0, 0, 0,15, 0, 0,18,18,97, 0, 0,15,15, 0, 0,15, 0, 0, 0,18,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19},
            {13,13,18,18,18,18,18,15,15, 0, 0,15,18,15,18,18,18,16,16,18, 0, 0, 0, 0,18,16,16,18,18,15,15,15,18,18,16,16,18,15,15,15,18,18,15,15,15,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {13,13,18,18,18,18,18,18,18,16,16,18,18,18,18,18,18,16,16,18, 0, 0, 0,15,18,16,16,18,18,18,18,18,18,18,16,16,18,18,18,18,18,18,18,18,18,18,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,16},
            {13,13,18,18,18,18,18,18,18,16,16,18,18,18,18,18,18,16,16,18, 0,98, 0, 0,18,16,16,18,18,18,18,18,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
            {13,13,18,18,18,18,18,18,18,16,16,18,18,18,18,18,18,16,16,18,15,15,15,15,18,16,16,18,18,18,18,18,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
            {13,13,18,18,18,18,18,18,18,16,16,18,18,18,18,18,18,16,16,18,18,18,18,18,18,16,16,18,18,18,18,18,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
            {13,13,18,18,18,18,18,18,18,16,16,18,18,18,18,18,18,16,16,16,16,16,16,16,16,16,16,18,18,18,18,18,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16}};
            #endregion

            #region layout8
            int[,] layout8 = new int[,] { 
            {19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,19,19, 0, 0, 0, 0},
            {19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
            {19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
            {19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19},
            { 0, 0, 0, 0, 0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19, 0, 0, 0, 0, 0, 0, 0, 0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19, 0, 0, 0, 0, 0, 0, 0, 0,19,19,19,19,19},
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19,19,19,19,19},
            { 0, 0, 0,96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,88, 0,19,19,19,19,19},
            { 0, 0,15,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,92, 0, 0, 0, 0, 0, 0, 0, 0,19,98,19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,19, 0,15,15,19,19,19,19,19},
            { 0,16,18, 0, 0, 0, 0, 0, 0,97, 0, 0, 0, 0, 0, 0,19,19, 0, 0, 0, 0, 0, 0, 0,19,19,19, 0, 0,19, 0, 0, 0, 0, 0, 0, 0, 0,15, 0, 0, 0,92,15, 0, 0, 0, 0, 0,19, 0, 0,16,18,18,19,19,19,19,19},
            {16,16,18, 0,15,15, 0, 0, 0,15, 0, 0, 0,15, 0, 0, 0, 0, 0,15, 0, 0,15,15, 0, 0, 0, 0, 0, 0, 0, 0, 0,15,15, 0, 0, 0,15,18,15, 0, 0,15,18, 0, 0, 0,15, 0, 0, 0,16,16,18,18,19,19,19,19,19},
            {16,16,18, 0,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,18,19,19,19,19,19},
            {16,16,18,15,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,18,19,19,19,19,19},
            {16,16,18,18,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,18,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,18,19,19,19,19,19}};
            #endregion

            #region background layouts bzw. layout9
            //background layouts
            int[,] layout9 = new int[,] {
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
            {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13}};
            #endregion
            #endregion

            #region Kristallevel

            #region layout1
            int[,] crystal1 = new int[,] {
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1},
           { 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 3, 3, 3, 3, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 3, 0, 0, 0},
           { 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 1, 0, 0, 0, 0, 1, 1, 3, 3, 3, 0, 0, 0},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 3, 1, 1, 1, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 0, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 0, 0, 1, 0},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 4, 0, 0, 0},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 0, 0},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 4, 4, 4},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 3, 3, 4, 4, 4, 9, 9, 9},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 3, 4, 4, 4, 4, 9, 0, 0},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 9, 0, 0},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 9, 9, 9},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
           { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4} };
            #endregion

            #region layout2
            int[,] crystal2 = new int[,] {
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
           { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 4, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
           { 0, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 3, 3,22, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 0, 0, 0, 0},
           { 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 4, 4, 3, 1, 1, 0, 0, 0, 0, 0, 1, 1, 4,22,22,22,22, 3, 3, 3, 1, 1, 1, 1, 1, 1, 3, 3,22, 3, 1, 1, 1, 1},
           { 0, 0, 0, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 1, 1, 0, 0, 0, 1, 4, 4, 4,22,22,22,22, 3, 3, 3, 3, 3, 3, 3, 3,22,22,22,22,22,22,22,22},
           { 9, 0, 0, 0, 9, 9, 9, 9, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 1, 1, 1, 4, 4, 4, 4, 4,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22},
           { 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 9, 9, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22},
           { 9, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 0, 0, 0, 0, 0, 9, 9, 9, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4,22,22, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
           { 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,22, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
           { 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
           { 9, 9, 9, 4, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
           { 4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
           { 4, 4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
           { 4, 4, 4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 9, 9, 9, 9, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3}};
            #endregion

            #region layout3
            int[,] crystal3 = new int[,] {
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22, 0, 0, 0,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22,22,22,22, 0, 0, 0, 0, 0,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0,20,20,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0,22,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20,20,20,20, 0, 0, 0, 0, 0,20,20,20,20,20,20, 0, 0, 0, 0, 0, 0, 0, 0, 0,23,22,23, 0, 0,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           {22, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,20,20,22,22,22,22,20,20,20,20,20,20,20,20,20,20,20,20, 0, 0,20, 0, 0,20, 0,23, 4,22, 4,23, 0,22,22, 0, 0, 0,20, 0, 0, 0,20, 0, 0, 0, 0,20, 0, 0,20},
           {22,22,22, 1, 1, 1, 0, 0, 0, 0,20,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,22,23,23,22,23, 4, 4,22, 4, 4,23,22,22,22, 0,23,23,23,23,23,23,23, 0, 0, 0,23,23,23,23},
           {22,22,22,22,22,22, 1, 0,20,20,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22, 4, 4,22, 4, 4,22, 4, 4, 4,22, 4, 4, 4,22,23,23,23,23, 4, 4, 4, 4, 4,23,23,23,23,23, 4, 4, 4},
           {22,22,22,22,22,22,22,20,22,22,22,22,22, 0, 0, 0, 0, 0, 0, 0,22,22,22,22,22,22,22,22,22, 4, 4,22, 4, 4,22, 4, 4, 4,22, 4, 4, 4,22, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
           {22,22,22,22,22,22,22,22,22,22,22,22,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,22, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4}};
            #endregion

            #region layout4
            int[,] crystal4 = new int[,] {
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22, 0, 0,22, 0, 0,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22, 0, 0, 0,22,22,22,22,22,22,22,22,22,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22, 0, 0,22,22,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13},
            {0, 0, 0, 0, 0, 0, 0, 0, 0,22,22,22,22,22,22,22,22,22, 0,22,22,22,22,22,22,22,22,22,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,22, 0, 0, 0, 0, 0, 0, 0, 0,22,22,22,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0},
            {0, 0,22,22, 0, 0,22,22,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,26,22, 0, 0,22,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0,26, 0, 0, 0,26,26,22, 0, 0, 0,22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,26},
           {20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20,20,20, 0, 0, 0, 0, 0, 0, 0,26,26,26, 0,26,26,26,22,26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0,20, 0, 0, 0, 0, 0,26,26,26},
           {23,23,23,23, 0, 0, 0,23, 0, 0,20,20,20,20,20, 0, 0, 0,22,22,22,22,22,22,22,22,22,22,22,26,26, 0, 0, 0,20, 0,20,20,20, 0, 0, 0,22,22, 0, 0,23,23,23,23,23,23,23, 0, 0,13,13,13,13,13},
           { 4,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,13,21,21,21,21},
           { 4,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,21,21,21,21,21,21},
           { 4,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,21,21,21,21,21,21,21},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,13, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,13, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,13, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,21},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,21},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,21},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,21},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,21}};
            #endregion

            #region layout5
            int[,] crystal5 = new int[,] {
           {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
           {13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
            {0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
            {0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
            {0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,26,26,26,26,26,26,26,26,26,26,26,26,26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
           {13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,26,26,13,13,13,13,13,13,13,26,26,26,26,26,26, 0, 0, 0, 0,13,13,13,13,13,13},
           {21,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,28,13,13,13, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,26,26,13, 0, 0, 0, 0, 0, 0,13,26,26,26,26,26,13,13,13,13,13,13,13,13,13,13,13},
           {21,21,13, 0, 0, 0, 0, 0,13, 0,13, 0,28,28,13,13, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,26,13, 0, 0, 0, 0, 0, 0, 0,13,26,26,26,13,13,13,13,13,13,13,13,13,13,13,13},
           {21,21,13,13,13,13, 0, 0, 0, 0,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13, 0, 0, 0,13,13,13, 0, 0,13,26,26,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {21,21,21,21,21,21,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13, 0, 0, 0,13,13,13,13,13,13,13,26,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {21,21,21,21,21,21,21,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {13,13,13,13,13,13,21,21,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0,13,21,21,21,21,21,21,21,13, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13},
           { 0, 0, 0, 0, 0, 0, 0,13,13,21,21,21,21,21,21,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0,13,21,21,21,21,21,21,21,13,13,13, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           { 0, 0, 0, 0,13, 0, 0, 0, 0, 0,13,13,21,21,21,21,21,13,13, 0, 0,13,28,13, 0,28,28,28,28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13, 0, 0, 0, 0, 0, 0},
           { 0, 0,13,13,13,13,13,13, 0, 0, 0, 0,13,13,13,13,13,13, 0, 0, 0,13,28,13,28,28,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0,28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0},
           { 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0,13,21,28,28,28,21,21,21,21,21,21,21,21,21,21,13,13,13,13,13,28,28,28,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           {13, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,28,13,13, 0,13,13,13,13,13, 0, 0,13,13},
           {13, 0,13, 0, 0, 0, 0, 0, 0,28,13, 0, 0, 0, 0, 0, 0, 0, 0,13,21,21,21,13,13,13,13,21,21,13,13,13,13,21,21,21,21,21,21,21,21,21,21,28,28,13, 0, 0, 0, 0, 0, 0, 0, 0,13,21},
           {21, 0, 0, 0,28, 0, 0, 0,28,28,28,13, 0, 0, 0, 0, 0, 0,13,21,21,21,21,13,13,13,13,14, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,21,13, 0, 0, 0, 0, 0, 0, 0,13,13,21},
           {21,13,13,28,28,28, 0,28,28,28,28,28,13, 0, 0, 0, 0, 0,13,21,21,21,21,13,13,13,13,14, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,21,13,13,13,13,13,13,13,13,13,13,21},
           {21,21,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,21,21,21,21,13,13,13,13,14, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,27,27},
           {21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,13,13,13,13,13,14, 0, 0, 0, 0, 0, 0, 0, 0, 0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,27,27,27}};

            #endregion

            #region layout6
            int[,] crystal6 = new int[,] {
           {27,27,27,27,27,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
           {13,13,13,13,13,27,27,27,27,27,27,27,27,27,27,27,27,27,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
            {0, 0, 0, 0,13,27,27,27,27,27,27,27,27,27,27,27,27,27,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,27,27,27,27,27,27,27,27,27,27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
            {0, 0, 0, 0, 0,13,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
            {0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,27,27,13,13,13,13,13,13,13,13,27,27,27,27,27,27,27,27,13,13,13,13,27,27,27,27,27,27,27,27,27,27, 0, 0, 0, 0, 0, 0, 0,13,13},
           {13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,27,13, 0, 0, 0,13, 0, 0,13,27,27,27,27,27,27,13,13,13, 0, 0,13,13,13,13,27,27,27,27,27,27,27, 0, 0, 0,13,13,13,13,13,13},
           {21,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0,13, 0,13,27,27,27,27,27,27,27,13, 0, 0, 0, 0,13,27,13,27,27,27,27,27,27,27,13,13,13,13,13,13,13,13,13},
           {21,21,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0,13,27,27,13,27,27,27,27,27,27,13,13,13,13,13,13,13,13,13},
           {21,27,13,13,13,13, 0, 0, 0, 0, 0,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,27,27,13,27,27,27,27,27,13,13,13,13,13,13,13,13,13},
           {27,27,27,27,27,27,13, 0,13,13,13,27,27,27,27,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,27,27,13,27,13,13,13,13,13,13,13,13,13,13},
           {27,27,27,27,27,27,27,13,27,27,27,27,27,27,27,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0,13,13, 0, 0,13,28,28,28,13,27,27,27,13,13,13,13,13,13,13,13,13,13,13},
           {27,27,27,27,27,27,27,27,13,13,13,13,13,13,13,13,13, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,28,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13},
           {27,27,27,27,27,27,27,27,13,27,27,27,27,27,27,27,13, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13},
           {13,13,13,13,13,13,13,13,13,27,27,27,27,27,27,13,13,13,13, 0, 0, 0,13, 0, 0,13, 0, 0, 0,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           {29,29,29,29,13,13, 0, 0, 0,13,13,13,13,13,13,13,13,13,13,13, 0, 0,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
           {29,29,29,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,27,13, 0,27,27,27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13, 0, 0, 0, 0, 0, 0},
           {29,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,27,13,27,27,13,13,13,13,13,13,13,13,13, 0, 0, 0, 0, 0,27,27,27,27,27, 0, 0,13, 0, 0, 0,13,13, 0, 0, 0},
           {29,13,29,29,13,29,29,29,13,13,13,13,13,13,13,13,13,13,13,13,13,27,27,27,27,27,27,27,27,27,27,27,27,27,27,13,13,13,13,13,13,13,13,13,27,27,27,13, 0, 0, 0,13,27,27,27, 0},
           {13,29,29,29,29,13,29,29,29,13,29,29,29,29,29,29,29,29,13,13,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,13,13,27,13,13,13,13,13,27,27,13,13},
           {13,13,13,28,29,29,13,29,29,29,13,29,13,29,29,29,29,29,29,13,27,27,21,13,13,13,13,21,21,13,13,13,13,27,27,27,21,21,21,21,21,21,27,27,27,27,27,27,27,27,27,27,27,27,13,27}};


            #endregion
            #region layout7
            int[,] crystal7 = new int[,] {
           {13,13,13,13,13,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,13,13,13,31,31,31,31,31,31,31,31,31,31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13},
            {0, 0, 0, 0, 0,13,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,13,13,13,31,31,31,31, 0, 0, 0, 0, 0, 0,13,13},
            {0, 0, 0, 0, 0, 0,13,13,13,13,13,13,13,13,13,31,31,13,13,13,13,13,13,13,13,31,31,31,31,31,31,31,31,13,13,13,13,31,31,31,31,31,31,31,13,31,31,31,31,31,31,31,31,31,13,13},
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13, 0, 0, 0,13,31,31,13,31,31,31,31,31,13,13,13,13, 0, 0,13,13,13,13,13,31,31,31,31,13,31,31,31,31,13,13,13,13,13,13},
           {13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,31,13,31,31,31,31,13, 0, 0, 0, 0, 0, 0, 0, 0,13,13,31,31, 0, 0,31,31,13,31,31,13,13,13,13,13,13,13},
           {13,27,13, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,31,31, 0, 0, 0, 0, 0, 0, 0,31, 0, 0,13,31,31,31,31},
           {27,27,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13, 0, 0, 0,13, 0, 0,31,31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,31,13,13,13},
           {27,27,27,27,27,27,13, 0,13,13,13, 0, 0, 0, 0,13,13,13,31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,31,31,31,13,31,31,13,31,31, 0, 0,31,31,13, 0, 0, 0, 0,13,31,13,13,13},
           {27,27,27,27,27,27,27,13,13,27,13, 0, 0, 0, 0,13,13,13,31,31, 0, 0, 0, 0,13, 0, 0, 0, 0, 0,13, 0,13,13,13,13,13,13,13,13,13,31,31,31,31,13,13,13,31, 0, 0,13,31,31,31,31},
           {27,27,27,27,27,27,27,27,13,13,13,13,13,13,13,13,13,13,31,31,31, 0, 0, 0, 0, 0, 0,31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13,13,31,31,13,13, 0, 0, 0, 0,31,13,13,13,13,13},
           {27,27,27,27,27,27,27,13,13,27,27,27,27,27,27,27,13,13,31,31,31,31, 0, 0, 0, 0,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,31,31},
           {13,13,13,13,13,13,13,13,13,27,27,27,27,27,27,13,13,13,13,13,13,13,13,13,13,13,13,31,13,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,31,31, 0, 0, 0,31,31,31},
           {13,13,13,13,13,13,13,13,13,27,27,27,27,27,27,13,31,31,31,31,31,31,31,31,31,31,31,31,31,13,13,13,13,13,13,31,31,31,31, 0, 0, 0, 0, 0,31,31, 0, 0, 0, 0, 0, 0, 0, 0,31,31},
           {13,13,13,13,13,13,13,13,13,27,27,27,27,27,27,13,13,31,31,31,31,31,31,31,31,31,31,31,31,13,13,13,13,13,13,13,13,13,13,31,31,31,31,31,31,31, 0, 0, 0, 0, 0,31,31,31,31,31},
           {13,13,13,13,13,13,13,13,13,27,27,27,27,27,27,13,13,31,31,31,31,31,31,31,31,31,31,31,31,13,13,13,13,13,13,13,13,13,13,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31}};

            #endregion
            #endregion

            int boxSize = 10;
            #region tutorial_layouts_generate
            //Arrays of generated Tilemaps
            tutorialMaps = new Tilemap[]
            {
                Tilemap.Generate(tutorialLayout1, boxSize, new Vector3(-80, 0, 0)),
                Tilemap.Generate(tutorialLayout2, boxSize, new Vector3(480, 0, 0)),
            };
            #endregion

            #region hölle_layouts_generate
            gameMaps_hell = new Tilemap[]
            {   //Höllenlevel
                Tilemap.Generate(layout1, boxSize, new Vector3(-80, 0, 0)),
                Tilemap.Generate(layout2, boxSize, new Vector3(510, 10, 0)),
                Tilemap.Generate(layout3, boxSize, new Vector3(1030, -60, 0)),
                Tilemap.Generate(layout4, boxSize, new Vector3(1550, -150, 0)),
                Tilemap.Generate(layout5, boxSize, new Vector3(2110, -260, 0)),
                Tilemap.Generate(layout6, boxSize, new Vector3(2670, -290, 0)),
                Tilemap.Generate(layout7, boxSize, new Vector3(3180,-410, 0)),
                Tilemap.Generate(layout8, boxSize, new Vector3(3760,-440, 0)),
                Tilemap.Generate(layout9, boxSize, new Vector3(-80,0,-10)),
          
            };
            #endregion

            #region crystal_layouts_generate
            //Kristallevel
            gameMaps_crystal = new Tilemap[]
            {
                Tilemap.Generate(crystal1, boxSize, new Vector3(-80, 0, 0)),
                Tilemap.Generate(crystal2, boxSize, new Vector3(480,0, 0)),// (480)
                Tilemap.Generate(crystal3, boxSize, new Vector3(1040, 0, 0)),//1040
                Tilemap.Generate(crystal4, boxSize, new Vector3(1640,30, 0)), //1640,30
                Tilemap.Generate(crystal5, boxSize, new Vector3(2240,0, 0)), //2230,0
                Tilemap.Generate(crystal6, boxSize, new Vector3(2800,-120, 0)),//560,-120
                Tilemap.Generate(crystal7, boxSize, new Vector3(3360,-240,0)),
            };
            #endregion

            //get active Tilemaps
            if (isTutorial)
                currentMaps = tutorialMaps;
            else if (isCrystal)
                currentMaps = gameMaps_crystal;
            else
                currentMaps = gameMaps_hell;

            //set start indices
            activeIndex1 = 0;
            activeIndex2 = 1;

            visibles = new List<Tile>();
            #endregion            

            //Camera
            Camera2D.Initialize(graphics.PreferredBackBufferWidth, graphics.PreferredBackBufferHeight);
            
            //SaveGame
            SaveGame.Reset();

            #region Tutorial & Story sprites
            menu_pause = content.Load<Texture2D>("Assets/Sprites/menu_pause");
            if (isTutorial)
            {
                tutSprites = new Texture2D[]
                {
                    content.Load<Texture2D>("Assets/Sprites/popup_tutorial1"),
                    content.Load<Texture2D>("Assets/Sprites/popup_tutorial2"),
                    content.Load<Texture2D>("Assets/Sprites/popup_tutorial3"),
                    content.Load<Texture2D>("Assets/Sprites/popup_tutorial4"),
                    content.Load<Texture2D>("Assets/Sprites/popup_tutorial5"),
                };
            }

            if (isCrystal)
            {
                kazumiStorySprites = new Texture2D[]
                {
                    content.Load<Texture2D>("Assets/Sprites/KazumisStory/KazumisDorfSepia"),
                    content.Load<Texture2D>("Assets/Sprites/KazumisStory/KazumiDorfbewohnerSepia"),
                    content.Load<Texture2D>("Assets/Sprites/KazumisStory/FractusMeteorSepia"),
                    content.Load<Texture2D>("Assets/Sprites/KazumisStory/KazumiShockedSepia"),
                    content.Load<Texture2D>("Assets/Sprites/KazumisStory/KazumiShockedBlack&White"),
                };
            }
            else
            {
                opheliaStorySprites = new Texture2D[]
                {
                    content.Load<Texture2D>("Assets/Sprites/OpheliasStory/HeiligerArschtrittSepia"),
                    content.Load<Texture2D>("Assets/Sprites/OpheliasStory/FallInDieTiefeSepia"),
                    content.Load<Texture2D>("Assets/Sprites/OpheliasStory/HarteLandungSepia"),
                    content.Load<Texture2D>("Assets/Sprites/OpheliasStory/ErwachenAufDerErdeSepia"),
                    content.Load<Texture2D>("Assets/Sprites/OpheliasStory/BannmalHalsSepia"),
                    content.Load<Texture2D>("Assets/Sprites/OpheliasStory/BannmalHandSepia"),
                    content.Load<Texture2D>("Assets/Sprites/OpheliasStory/BannmalHandSepia - Kopie"),
                    content.Load<Texture2D>("Assets/Sprites/OpheliasStory/BannmalFußSepia - Kopie"),
                    content.Load<Texture2D>("Assets/Sprites/OpheliasStory/BannmalFußSepia"),
                };
            }
            #endregion

            //Skybox
            //Skybox
            //Background crystal sun
           // skybox = new SkyBox(new Vector3(0, 0, -13), "Assets/Skybox/cube_hell", content);
            background = content.Load<Texture2D>("Assets/Skybox/Skybox-Back");
            background2 = content.Load<Texture2D>("Assets/Skybox/Skybox-Left");
            background3 = content.Load<Texture2D>("Assets/Skybox/Skybox-Front");
            background4 = content.Load<Texture2D>("Assets/Skybox/Skybox-Right");
            background5 = content.Load<Texture2D>("Assets/Skybox/Skybox-Bottom - Kopie (2)");//für back(y)
            background7 = content.Load<Texture2D>("Assets/Skybox/Skybox-Bottom - Kopie");//für left(y)
            background9 = content.Load<Texture2D>("Assets/Skybox/Skybox-Bottom");//für front(y)
            background10 = content.Load<Texture2D>("Assets/Skybox/Skybox-Bottom - Kopie (3)");//für front(y)


            //crystal black
            background8 = content.Load<Texture2D>("Assets/Skybox/black");
            background11 = content.Load<Texture2D>("Assets/Skybox/grey");

            //Player
            ghost = new Character(Vector3.Zero, "skull", content);

            if (isCrystal)
            {
                player = new CharacterKazumi(new Vector3(0, 0, 5), "Kazumi", content, new BoundingBox(new Vector3(-2.5f, -9f, -2.5f), new Vector3(2.5f, 9f, 2.5f)));
                hud = new KazumiHUD(cont, graphics);
                CharacterKazumi.manaLeft = 3;
            }
            else
            {
                player = new CharacterOphelia(new Vector3(0, 0, 5), "Ophelia", content, new BoundingBox(new Vector3(-2.5f, -9f, -2.5f), new Vector3(2.5f, 9f, 2.5f)));
                hud = new OpheliaHUD(cont, graphics);
                CharacterOphelia.manaLeft = 3;
            }

            //Checkpoints (default = Startposition)
            lastCheckpoint = new Checkpoint(Vector3.Zero, "checkpoint_hell", content);
        }
        #endregion

        #region Update
        public Game1.EGameState Update(GameTime gameTime)
        {
            if (Singleplayer.isCrystal)
            {
                Sounds.crystalBG.Play();

                if (!Singleplayer.storyIsDisyplayed)
                    GameControls.updateKazumiStory();
            }
            else
            {
                if (!Singleplayer.storyIsDisyplayed)
                    GameControls.updateOpheliaStory();
            }
            
            //Viewport Culling
            visibles = Tilemap.getVisibleTiles(currentMaps);
                        
            if (isPaused)
            {
                if (isTutorial)
                    GameControls.updateTutorial();

                return GameControls.updateSingleplayerPaused(gameTime, visibles);
            }
            else
            {
                GameControls.updateSingleplayer(gameTime, visibles);
                
                if (isTutorial)
                    GameControls.updateTutorial();

                //check if active Tilemaps have changed
                Tilemap.updateActiveTilemaps(currentMaps);

                #region HUD
                hud.Update();

                hud.UpdateMana();

                hud.UpdateHealth();

                hud.UpdateLiquidPositionByResolution();

                if (hud.isDead)
                {
                    return Game1.EGameState.GameOver;
                }
                #endregion

                //Player
                player.Update(gameTime);

                //Powerups
                foreach (Powerup p in currentMaps[activeIndex1].PowerupList)
                {
                    p.Update();
                }
                foreach (Powerup p in currentMaps[activeIndex2].PowerupList)
                {
                    p.Update();
                }

                //Checkpoints
                foreach (Checkpoint c in currentMaps[activeIndex1].CheckpointList)
                {
                    c.Update();
                }
                foreach (Checkpoint c in currentMaps[activeIndex2].CheckpointList)
                {
                    c.Update();
                }

                #region Enemies
                foreach (Enemy e in currentMaps[activeIndex1].EnemyList)
                {
                    e.UpdateSingleplayer(gameTime);
                }
                foreach (Enemy e in currentMaps[activeIndex2].EnemyList)
                {
                    e.UpdateSingleplayer(gameTime);
                }

                //remove dead enemies from active lists
                for (int i = 0; i < currentMaps[activeIndex1].EnemyList.Count; i++)
                {
                    if (currentMaps[activeIndex1].EnemyList.ElementAt(i).isDead)
                    {
                        currentMaps[activeIndex1].EnemyList.ElementAt(i).Destroy();
                        currentMaps[activeIndex1].EnemyList.Remove(currentMaps[activeIndex1].EnemyList.ElementAt(i));
                    }
                }
                for (int i = 0; i < currentMaps[activeIndex2].EnemyList.Count; i++)
                {
                    if (currentMaps[activeIndex2].EnemyList.ElementAt(i).isDead)
                    {
                        currentMaps[activeIndex2].EnemyList.ElementAt(i).Destroy();
                        currentMaps[activeIndex2].EnemyList.Remove(currentMaps[activeIndex2].EnemyList.ElementAt(i));
                    }
                }
                #endregion                

                GameControls.updateVibration(gameTime);
            }

            ////DEBUG---------------------------
            //Console.Clear();
            //Console.WriteLine(player.CharacterType);
            //Console.WriteLine(isPopup);
            //Console.WriteLine(player.Position);
            ////--------------------------------
            if (isTutorial && player.Boundary.Intersects(TutorialExit.Boundary))
            {
                isTutorial = false;

                Initialize(cont);
            }
            if(player.Boundary.Intersects(GoldSoundTrigger.Boundary)){
                soundPlayedGold = false;
                if(!soundPlayedGold){
                    Sounds.cave.Play();
                
                    soundPlayedGold = true;
                }
            }
            if (!player.Boundary.Intersects(GoldSoundTrigger.Boundary))
            {
                Sounds.cave.Stop();
            }

            //notwendiger Rueckgabewert
            if (player.Boundary.Intersects(ArenaKey.Boundary))
                return Game1.EGameState.Arena;
            else
                return Game1.EGameState.Singleplayer;            
        }
        #endregion

        #region Draw
        public void Draw(GameTime gameTime)
        {
            #region Background

            if (isCrystal)
            {
                spriteBatch.Begin();

                graphics.GraphicsDevice.Clear(Color.Gray);

                #region filling world rectangle

                //back->left->front->right
                Vector2 drawPos = Camera2D.transform2D(new Vector2(-80, 0)); //back
                Vector2 drawPos2 = Camera2D.transform2D(new Vector2(432, 0)); //left
                Vector2 drawPos3 = Camera2D.transform2D(new Vector2(944, 0)); //front
                Vector2 drawPos4 = Camera2D.transform2D(new Vector2(1456, 0)); //right
                Vector2 drawPos6 = Camera2D.transform2D(new Vector2(1968, 0));//back
                //y-werte
                Vector2 drawPos5 = Camera2D.transform2D(new Vector2(-80, 512));
                Vector2 drawPos10 = Camera2D.transform2D(new Vector2(432, 512));
                Vector2 drawPos11 = Camera2D.transform2D(new Vector2(944, 512));
                Vector2 drawPos12 = Camera2D.transform2D(new Vector2(1456, 512));
                Vector2 drawPos13 = Camera2D.transform2D(new Vector2(1968, 512));

                //black
                Vector2 drawPos7 = Camera2D.transform2D(new Vector2(2480, 0));
                Vector2 drawPos8 = Camera2D.transform2D(new Vector2(3504, 0));
                Vector2 drawPos9 = Camera2D.transform2D(new Vector2(4528, 0));

                int drawRecWidth = 512;
                int drawRecHeight = 512;

                int drawRecWidth2 = 1024;
                int drawRecHeight2 = 1024;

                Rectangle drawRec = new Rectangle((int)drawPos.X, (int)drawPos.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec2 = new Rectangle((int)drawPos2.X, (int)drawPos2.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec3 = new Rectangle((int)drawPos3.X, (int)drawPos3.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec4 = new Rectangle((int)drawPos4.X, (int)drawPos4.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec5 = new Rectangle((int)drawPos5.X, (int)drawPos5.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec6 = new Rectangle((int)drawPos6.X, (int)drawPos6.Y, drawRecWidth, drawRecHeight);

                //black
                Rectangle drawRec7 = new Rectangle((int)drawPos7.X, (int)drawPos7.Y, drawRecWidth2, drawRecHeight);
                Rectangle drawRec8 = new Rectangle((int)drawPos8.X, (int)drawPos8.Y, drawRecWidth2, drawRecHeight2);
                Rectangle drawRec9 = new Rectangle((int)drawPos9.X, (int)drawPos9.Y, drawRecWidth2, drawRecHeight2);

                //ywerte
                Rectangle drawRec10 = new Rectangle((int)drawPos10.X, (int)drawPos10.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec11 = new Rectangle((int)drawPos11.X, (int)drawPos11.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec12 = new Rectangle((int)drawPos12.X, (int)drawPos12.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec13 = new Rectangle((int)drawPos13.X, (int)drawPos13.Y, drawRecWidth, drawRecHeight);
                //Rectangle drawRec14 = new Rectangle((int)drawPos13.X, (int)drawPos14.Y, drawRecWidth, drawRecHeight);

                spriteBatch.Draw(background, drawPos, Color.White);
                spriteBatch.Draw(background2, drawPos2, Color.White);
                spriteBatch.Draw(background3, drawPos3, Color.White);
                spriteBatch.Draw(background4, drawPos4, Color.White);
                spriteBatch.Draw(background, drawPos6, Color.White);
                //y-werte
                spriteBatch.Draw(background5, drawPos5, Color.White);
                spriteBatch.Draw(background7, drawPos10, Color.White);
                spriteBatch.Draw(background9, drawPos11, Color.White);
                spriteBatch.Draw(background10, drawPos12, Color.White);
                spriteBatch.Draw(background5, drawPos13, Color.White);

                //black
                spriteBatch.Draw(background8, drawPos7, Color.White);
                spriteBatch.Draw(background8, drawPos8, Color.White);
                spriteBatch.Draw(background8, drawPos9, Color.White);
                //spriteBatch.Draw(background11, drawPos11, Color.White);
                //spriteBatch.Draw(background12, drawPos12, Color.White);
                //spriteBatch.Draw(background13, drawPos13, Color.White);
                //spriteBatch.Draw(background14, drawPos14, Color.White);

                #endregion

                spriteBatch.End();

            }
            else
            {
                spriteBatch.Begin();

                graphics.GraphicsDevice.Clear(Color.Gray);

                #region filling world rectangle

                Vector2 drawPos = Camera2D.transform2D(new Vector2(-80, 0)); //back
                Vector2 drawPos2 = Camera2D.transform2D(new Vector2(432, 0)); //left
                Vector2 drawPos3 = Camera2D.transform2D(new Vector2(944, 0)); //front
                Vector2 drawPos4 = Camera2D.transform2D(new Vector2(1456, 0)); //right


                //y-werte
                Vector2 drawPos5 = Camera2D.transform2D(new Vector2(-80, 512));
                Vector2 drawPos10 = Camera2D.transform2D(new Vector2(432, 512));
                Vector2 drawPos11 = Camera2D.transform2D(new Vector2(944, 512));
                Vector2 drawPos12 = Camera2D.transform2D(new Vector2(1456, 512));
                //  Vector2 drawPos13 = Camera2D.transform2D(new Vector2(1968, 512));

                //black
                Vector2 drawPos6 = Camera2D.transform2D(new Vector2(1968, 0));//back
                Vector2 drawPos7 = Camera2D.transform2D(new Vector2(2992, 0));
                Vector2 drawPos8 = Camera2D.transform2D(new Vector2(3400, 300));
                Vector2 drawPos9 = Camera2D.transform2D(new Vector2(4574, 300));



                int drawRecWidth = 512;
                int drawRecHeight = 512;

                int drawRecWidth2 = 1024;
                int drawRecHeight2 = 1024;

                //sun(x werte)
                Rectangle drawRec = new Rectangle((int)drawPos.X, (int)drawPos.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec2 = new Rectangle((int)drawPos2.X, (int)drawPos2.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec3 = new Rectangle((int)drawPos3.X, (int)drawPos3.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec4 = new Rectangle((int)drawPos4.X, (int)drawPos4.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec5 = new Rectangle((int)drawPos5.X, (int)drawPos5.Y, drawRecWidth, drawRecHeight);

                //ywerte
                Rectangle drawRec10 = new Rectangle((int)drawPos10.X, (int)drawPos10.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec11 = new Rectangle((int)drawPos11.X, (int)drawPos11.Y, drawRecWidth, drawRecHeight);
                Rectangle drawRec12 = new Rectangle((int)drawPos12.X, (int)drawPos12.Y, drawRecWidth, drawRecHeight);
                // Rectangle drawRec13 = new Rectangle((int)drawPos13.X, (int)drawPos13.Y, drawRecWidth, drawRecHeight);

                //black
                Rectangle drawRec6 = new Rectangle((int)drawPos6.X, (int)drawPos6.Y, drawRecWidth2, drawRecHeight2);
                Rectangle drawRec7 = new Rectangle((int)drawPos7.X, (int)drawPos7.Y, drawRecWidth2, drawRecHeight2);
                Rectangle drawRec8 = new Rectangle((int)drawPos8.X, (int)drawPos8.Y, drawRecWidth2, drawRecHeight2);
                Rectangle drawRec9 = new Rectangle((int)drawPos9.X, (int)drawPos9.Y, drawRecWidth2, drawRecHeight2);


                spriteBatch.Draw(background, drawPos, Color.White);
                spriteBatch.Draw(background2, drawPos2, Color.White);
                spriteBatch.Draw(background3, drawPos3, Color.White);
                spriteBatch.Draw(background4, drawPos4, Color.White);
                spriteBatch.Draw(background8, drawPos6, Color.White);
                //y-werte
                spriteBatch.Draw(background5, drawPos5, Color.White);
                spriteBatch.Draw(background7, drawPos10, Color.White);
                spriteBatch.Draw(background9, drawPos11, Color.White);
                spriteBatch.Draw(background10, drawPos12, Color.White);
                // spriteBatch.Draw(background5, drawPos13, Color.White);
                //black
                spriteBatch.Draw(background8, drawPos7, Color.White);
                spriteBatch.Draw(background11, drawPos8, Color.White);
                spriteBatch.Draw(background11, drawPos9, Color.White);
                #endregion

                spriteBatch.End();
            }


            //GraphicsDevice auf default setzen
            graphics.GraphicsDevice.BlendState = BlendState.Opaque;
            graphics.GraphicsDevice.DepthStencilState = DepthStencilState.Default;
            #endregion

            #region 3D Objects
            //Terrain (includes Powerups, Checkpoints)
            currentMaps[activeIndex1].Draw(visibles);
            currentMaps[activeIndex2].Draw(visibles);

            //Player or Ghost
            if (GameControls.isGhost && GameControls.moveVecGhost != Vector3.Zero)
                ghost.drawIn2DWorld(new Vector3(0.05f, 0.05f, 0.05f), 0, 0, 0);
            else
            {
                player.drawIn2DWorld(new Vector3(0.02f, 0.02f, 0.02f), 0, MathHelper.ToRadians(90) * player.viewingDirection.X, 0);
                player.DrawAttacks();
            }
            
            //SkyBox
        //    skybox.Drawsky( new Vector3(1000f, 50f, -2.5f), 0, 0, 0);

            #region Enemies
            foreach (Enemy e in currentMaps[activeIndex1].EnemyList)
            {
                e.Draw();
            }
            foreach (Enemy e in currentMaps[activeIndex2].EnemyList)
            {
                e.Draw();
            }
            #endregion

            //ArenaKey & TutorialExit
            if (ArenaKey.Position.X - player.Position.X < 100)
                ArenaKey.drawIn2DWorld(new Vector3(0.03f, 0.03f, 0.03f), 0, 0, 0);

            if (isTutorial && TutorialExit.Position.X - player.Position.X < 100)
                TutorialExit.drawIn2DWorld(new Vector3(0.03f, 0.03f, 0.03f), 0, 0, 0);
            #endregion

            #region HUD & other Sprites in Foreground
            spriteBatch.Begin();

            hud.Draw(spriteBatch);

            //Tutorial sprites
            if (isTutorial && isPopup)
            {
                Vector2 popupPos = new Vector2(graphics.PreferredBackBufferWidth / 2 - tutSprites[tutIndex].Bounds.Width / 2,
                                                graphics.PreferredBackBufferHeight / 2 - tutSprites[tutIndex].Bounds.Height / 2);

                spriteBatch.Draw(tutSprites[tutIndex], popupPos, Color.White);

                spriteBatch.DrawString(cont.Load<SpriteFont>("Assets/Fonts/HUDfont"), "Press START or ENTER to close", new Vector2(0, 0), Color.White);
            }
            else if (isPaused)
            {
                Vector2 menuPos = new Vector2(graphics.PreferredBackBufferWidth / 2 - menu_pause.Bounds.Width / 2, 
                                                graphics.PreferredBackBufferHeight / 2 - menu_pause.Bounds.Height / 2);

                spriteBatch.Draw(menu_pause, menuPos, Color.White);
            }

            //Story sprites
            if (isCrystal && !storyIsDisyplayed && !isTutorial)
            {
                spriteBatch.Draw(kazumiStorySprites[kazumiStoryIndex], graphics.GraphicsDevice.Viewport.Bounds, Color.White);
                spriteBatch.DrawString(cont.Load<SpriteFont>("Assets/Fonts/HUDfont"), "Press E or LB to close", new Vector2(0, 0), Color.White);
            }
            if (!isCrystal && !storyIsDisyplayed && !isTutorial)
            {
                spriteBatch.Draw(opheliaStorySprites[opheliaStoryIndex], graphics.GraphicsDevice.Viewport.Bounds, Color.White);
                spriteBatch.DrawString(cont.Load<SpriteFont>("Assets/Fonts/HUDfont"), "Press E or LB to continue", new Vector2(0, 0), Color.White);
            }

            spriteBatch.End();

            //GraphicsDevice auf default setzen
            graphics.GraphicsDevice.BlendState = BlendState.Opaque;
            graphics.GraphicsDevice.DepthStencilState = DepthStencilState.Default;
            #endregion
        }
        #endregion

        // loeschen aller grafischen Elemente
        public void Unload()
        {
            //empty entity lists
            foreach (Tilemap tm in gameMaps_hell)
            {
                tm.CheckpointList.Clear();
                tm.EnemyList.Clear();
                tm.PowerupList.Clear();
                tm.TileList.Clear();
            }
            foreach (Tilemap tm in tutorialMaps)
            {
                tm.CheckpointList.Clear();
                tm.EnemyList.Clear();
                tm.PowerupList.Clear();
                tm.TileList.Clear();
            }
            foreach (Tilemap tm in gameMaps_crystal)
            {
                tm.CheckpointList.Clear();
                tm.EnemyList.Clear();
                tm.PowerupList.Clear();
                tm.TileList.Clear();
            }

            cont.Unload();
        }

        // Freigabe der restlichen Standardressourcen
        // automatischer Aufruf des GarbageCollector beim Beenden des Spiels
        public void Dispose()
        {
            //throw new NotImplementedException();
        }
    }
}
